# Generated by Django 5.1.5 on 2025-10-27 13:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0047_subgroupcategoryfrequencyconfig_subgroupentrynew_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ParameterGroupConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        choices=[
                            ("P703", "P703"),
                            ("U704", "U704"),
                            ("FD", "FD"),
                            ("SA", "SA"),
                            ("Gnome", "Gnome"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "parameter_group",
                    models.CharField(
                        choices=[
                            ("uv_vacuum", "UV Vacuum Test (5 readings)"),
                            ("uv_flow", "UV Flow Value (5 readings)"),
                            ("umbrella_valve", "Umbrella Valve Assembly (5 checks)"),
                            ("uv_clip", "UV Clip Pressing (5 checks)"),
                            ("workstation", "Workstation Clean (1 check)"),
                            ("bin_contamination", "Bin Contamination Check (5 checks)"),
                        ],
                        max_length=50,
                        verbose_name="Parameter Group",
                    ),
                ),
                (
                    "frequency_minutes",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Minutes after checklist creation when fields appear",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("display_order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Parameter Group Configuration",
                "verbose_name_plural": "Parameter Group Configurations",
                "ordering": ["display_order", "frequency_minutes"],
                "unique_together": {("model_name", "parameter_group")},
            },
        ),
        migrations.CreateModel(
            name="ParameterGroupEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "parameter_group",
                    models.CharField(
                        choices=[
                            ("uv_vacuum", "UV Vacuum Test (5 readings)"),
                            ("uv_flow", "UV Flow Value (5 readings)"),
                            ("umbrella_valve", "Umbrella Valve Assembly (5 checks)"),
                            ("uv_clip", "UV Clip Pressing (5 checks)"),
                            ("workstation", "Workstation Clean (1 check)"),
                            ("bin_contamination", "Bin Contamination Check (5 checks)"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "uv_vacuum_test_1",
                    models.FloatField(
                        blank=True,
                        help_text="Range: -43 to -35 kPa",
                        null=True,
                        verbose_name="UV Vacuum Test 1 (kPa)",
                    ),
                ),
                (
                    "uv_vacuum_test_2",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 2 (kPa)"
                    ),
                ),
                (
                    "uv_vacuum_test_3",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 3 (kPa)"
                    ),
                ),
                (
                    "uv_vacuum_test_4",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 4 (kPa)"
                    ),
                ),
                (
                    "uv_vacuum_test_5",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 5 (kPa)"
                    ),
                ),
                (
                    "uv_flow_value_1",
                    models.FloatField(
                        blank=True,
                        help_text="Range: 30-40 LPM",
                        null=True,
                        verbose_name="UV Flow Value 1 (LPM)",
                    ),
                ),
                (
                    "uv_flow_value_2",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 2 (LPM)"
                    ),
                ),
                (
                    "uv_flow_value_3",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 3 (LPM)"
                    ),
                ),
                (
                    "uv_flow_value_4",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 4 (LPM)"
                    ),
                ),
                (
                    "uv_flow_value_5",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 5 (LPM)"
                    ),
                ),
                (
                    "umbrella_valve_assembly_1",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_1_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_2",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_2_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_3",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_3_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_4",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_4_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_5",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_5_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "uv_clip_pressing_1",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_1_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_2",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_2_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_3",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_3_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_4",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_4_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_5",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_5_comment", models.TextField(blank=True, null=True)),
                (
                    "workstation_clean",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        null=True,
                        verbose_name="Workstation Clean",
                    ),
                ),
                ("workstation_clean_comment", models.TextField(blank=True, null=True)),
                (
                    "bin_contamination_check_1",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_1_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_2",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_2_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_3",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_3_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_4",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_4_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_5",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_5_comment",
                    models.TextField(blank=True, null=True),
                ),
                ("is_after_maintenance", models.BooleanField(default=False)),
                ("maintenance_comment", models.TextField(blank=True, null=True)),
                ("general_notes", models.TextField(blank=True, null=True)),
                (
                    "checklist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameter_entries",
                        to="main.checklistbase",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parameter Group Entry",
                "verbose_name_plural": "Parameter Group Entries",
                "ordering": ["timestamp"],
            },
        ),
    ]
