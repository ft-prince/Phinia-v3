# Generated by Django 5.1.5 on 2025-10-02 05:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0034_alter_ftqrecord_production_per_shift"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubgroupFrequencyConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        choices=[
                            ("P703", "P703"),
                            ("U704", "U704"),
                            ("FD", "FD"),
                            ("SA", "SA"),
                            ("Gnome", "Gnome"),
                        ],
                        max_length=10,
                        unique=True,
                    ),
                ),
                (
                    "frequency_hours",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="Hours between measurements (1-12)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                (
                    "max_subgroups",
                    models.PositiveIntegerField(
                        default=6,
                        help_text="Maximum number of subgroups per shift",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(24),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Subgroup Frequency Configuration",
                "verbose_name_plural": "Subgroup Frequency Configurations",
            },
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="effectiveness_comment",
            field=models.TextField(
                blank=True,
                help_text="Comment on effectiveness of maintenance activity",
                null=True,
                verbose_name="Effectiveness comment",
            ),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="has_nok_entries",
            field=models.BooleanField(default=False, editable=False),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="is_after_maintenance",
            field=models.BooleanField(
                default=False, verbose_name="Added after maintenance/ME activity"
            ),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="maintenance_comment",
            field=models.TextField(
                blank=True,
                help_text="Describe the maintenance/ME activity performed",
                null=True,
                verbose_name="Maintenance activity comment",
            ),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="nok_approval_timestamp",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="nok_quality_approved",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="nok_quality_approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="nok_quality_approvals",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="nok_supervisor_approved",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="subgroupentry",
            name="nok_supervisor_approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="nok_supervisor_approvals",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="bottom_tool_id_status",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="error_proofing_verification",
            field=models.CharField(
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                verbose_name="All Error proofing / Error detection verification done",
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="good_bad_master_verification",
            field=models.CharField(
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                verbose_name="Good and Bad master verification (refer EPVS)",
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="master_verification_lvdt",
            field=models.CharField(
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                verbose_name="Master Verification for LVDT",
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="oring_condition",
            field=models.CharField(
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                verbose_name="O-ring condition (UV Flow check sealing area) (O-ring सील की स्थिति सही होनी चाहिए)",
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="retainer_id_lubrication",
            field=models.CharField(
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                verbose_name="Retainer ID lubrication",
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="retainer_part_no_status",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="tool_alignment",
            field=models.CharField(
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                verbose_name="Tool Alignment (Top & Bottom) (Tool Alignment) सही होना चाहिए",
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="top_tool_id_status",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="umbrella_part_no_status",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="uv_assy_stage_id_status",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="checklistbase",
            name="uv_clip_part_no_status",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="bin_contamination_check_1",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Bin Contamination Check Reading 1",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="bin_contamination_check_2",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Bin Contamination Check Reading 2",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="bin_contamination_check_3",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Bin Contamination Check Reading 3",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="bin_contamination_check_4",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Bin Contamination Check Reading 4",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="bin_contamination_check_5",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Bin Contamination Check Reading 5",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="umbrella_valve_assembly_1",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Umbrella Valve Assembly Reading 1",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="umbrella_valve_assembly_2",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Umbrella Valve Assembly Reading 2",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="umbrella_valve_assembly_3",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Umbrella Valve Assembly Reading 3",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="umbrella_valve_assembly_4",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Umbrella Valve Assembly Reading 4",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="umbrella_valve_assembly_5",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Umbrella Valve Assembly Reading 5",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="uv_clip_pressing_1",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="UV Clip Pressing Reading 1",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="uv_clip_pressing_2",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="UV Clip Pressing Reading 2",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="uv_clip_pressing_3",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="UV Clip Pressing Reading 3",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="uv_clip_pressing_4",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=5,
                null=True,
                verbose_name="UV Clip Pressing Reading 4",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="uv_clip_pressing_5",
            field=models.CharField(
                blank=True,
                choices=[("OK", "OK"), ("NOK", "NOK")],
                max_length=5,
                null=True,
                verbose_name="UV Clip Pressing Reading 5",
            ),
        ),
        migrations.AlterField(
            model_name="subgroupentry",
            name="workstation_clean",
            field=models.CharField(
                blank=True,
                choices=[("Yes", "Yes"), ("NOK", "NOK")],
                max_length=3,
                null=True,
                verbose_name="Workstation Clean",
            ),
        ),
        migrations.CreateModel(
            name="ChecksheetContentConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        choices=[
                            ("P703", "P703"),
                            ("U704", "U704"),
                            ("FD", "FD"),
                            ("SA", "SA"),
                            ("Gnome", "Gnome"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "parameter_name",
                    models.CharField(max_length=200, verbose_name="Parameter Name"),
                ),
                (
                    "parameter_name_hindi",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Parameter Name (Hindi)",
                    ),
                ),
                (
                    "measurement_type",
                    models.CharField(
                        choices=[
                            ("numeric", "Numeric"),
                            ("ok_nok", "OK/NOK"),
                            ("yes_no", "Yes/No"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "min_value",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Minimum Value"
                    ),
                ),
                (
                    "max_value",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Maximum Value"
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Unit (e.g., kPa, LPM)"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "requires_comment_if_nok",
                    models.BooleanField(
                        default=True, verbose_name="Require comment if NOK/No"
                    ),
                ),
            ],
            options={
                "ordering": ["model_name", "order"],
                "unique_together": {("model_name", "parameter_name")},
            },
        ),
        migrations.AddField(
            model_name="checklistbase",
            name="frequency_config",
            field=models.ForeignKey(
                blank=True,
                help_text="Measurement frequency for this model",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="main.subgroupfrequencyconfig",
            ),
        ),
    ]
