# Generated by Django 5.1.5 on 2025-04-24 18:54

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0012_defectrecord_defect_type_custom_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DTPMChecklistFMA03",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "header_image",
                    models.ImageField(
                        blank=True,
                        help_text="Main header image for the DTPM sheet",
                        null=True,
                        upload_to="dtpm/header_images/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "operator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operated_dtpm_checklists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dtpm_checklists",
                        to="main.shift",
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervised_dtpm_checklists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "DTPM Checklist",
                "verbose_name_plural": "DTPM Checklists",
                "ordering": ["-date"],
                "unique_together": {("date", "shift")},
            },
        ),
        migrations.CreateModel(
            name="DTPMCheckResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_number",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "EMERGENCY push button is Working Properly"),
                            (
                                2,
                                "There should not be any air leakage & Lubrication unit mounting should not be loose and no oil spillage",
                            ),
                            (3, "All nuts and bolts should not be loose or free"),
                            (4, "Check all sensors for damage or looseness"),
                            (5, "Tower lamp & Tube light should be working properly"),
                            (
                                6,
                                "All indicators & push buttons should be working properly",
                            ),
                            (7, "Check Safety curtain working properly"),
                        ]
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[("OK", "OK"), ("NG", "NG")], max_length=2
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Image showing the condition during check",
                        null=True,
                        upload_to="dtpm/check_images/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("checked_at", models.DateTimeField(auto_now_add=True)),
                (
                    "checked_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dtpm_checks_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "checklist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="check_results",
                        to="main.dtpmchecklistfma03",
                    ),
                ),
            ],
            options={
                "ordering": ["checklist", "item_number"],
                "unique_together": {("checklist", "item_number")},
            },
        ),
        migrations.CreateModel(
            name="DTPMIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("action_taken", models.TextField(blank=True, null=True)),
                ("resolution_date", models.DateTimeField(blank=True, null=True)),
                (
                    "issue_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="dtpm/issue_images/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "resolution_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="dtpm/resolution_images/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_dtpm_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "check_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="main.dtpmcheckresult",
                    ),
                ),
                (
                    "reported_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reported_dtpm_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resolved_dtpm_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
