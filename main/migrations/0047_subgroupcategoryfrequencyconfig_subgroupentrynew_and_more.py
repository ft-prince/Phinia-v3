# Generated by Django 5.1.5 on 2025-10-25 18:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0046_delete_subgroupcategoryfrequencyconfig"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubgroupCategoryFrequencyConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        choices=[
                            ("P703", "P703"),
                            ("U704", "U704"),
                            ("FD", "FD"),
                            ("SA", "SA"),
                            ("Gnome", "Gnome"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("uv_vacuum_test", "UV Vacuum Test"),
                            ("uv_flow_value", "UV Flow Value"),
                            ("umbrella_valve_assembly", "Umbrella Valve Assembly"),
                            ("uv_clip_pressing", "UV Clip Pressing"),
                            ("workstation_cleanliness", "Workstation Cleanliness"),
                            ("bin_contamination_check", "Bin Contamination Check"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "frequency_minutes",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Frequency in minutes (e.g., 60 = every hour, 120 = every 2 hours)",
                    ),
                ),
                (
                    "max_readings_per_shift",
                    models.PositiveIntegerField(
                        default=5,
                        help_text="Maximum number of readings for this category per shift",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Subgroup Category Frequency Config",
                "verbose_name_plural": "Subgroup Category Frequency Configs",
                "ordering": ["model_name", "category"],
                "unique_together": {("model_name", "category")},
            },
        ),
        migrations.CreateModel(
            name="SubgroupEntryNew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subgroup_number", models.PositiveIntegerField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("uv_vacuum_test", "UV Vacuum Test"),
                            ("uv_flow_value", "UV Flow Value"),
                            ("umbrella_valve_assembly", "Umbrella Valve Assembly"),
                            ("uv_clip_pressing", "UV Clip Pressing"),
                            ("workstation_cleanliness", "Workstation Cleanliness"),
                            ("bin_contamination_check", "Bin Contamination Check"),
                        ],
                        help_text="Which category this reading belongs to",
                        max_length=30,
                    ),
                ),
                (
                    "is_after_maintenance",
                    models.BooleanField(
                        default=False,
                        help_text="Check if this reading was taken after maintenance",
                        verbose_name="Is this reading after maintenance?",
                    ),
                ),
                (
                    "maintenance_comment",
                    models.TextField(
                        blank=True,
                        help_text="Comments about maintenance performed",
                        null=True,
                        verbose_name="Maintenance Comments",
                    ),
                ),
                (
                    "effectiveness_comment",
                    models.TextField(
                        blank=True,
                        help_text="Comments about the effectiveness of the process",
                        null=True,
                        verbose_name="Effectiveness Comments",
                    ),
                ),
                (
                    "uv_vacuum_test_1",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 1 (mbar)"
                    ),
                ),
                ("uv_vacuum_test_1_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_vacuum_test_2",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 2 (mbar)"
                    ),
                ),
                ("uv_vacuum_test_2_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_vacuum_test_3",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 3 (mbar)"
                    ),
                ),
                ("uv_vacuum_test_3_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_vacuum_test_4",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 4 (mbar)"
                    ),
                ),
                ("uv_vacuum_test_4_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_vacuum_test_5",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Vacuum Test 5 (mbar)"
                    ),
                ),
                ("uv_vacuum_test_5_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_flow_value_1",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 1 (%)"
                    ),
                ),
                ("uv_flow_value_1_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_flow_value_2",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 2 (%)"
                    ),
                ),
                ("uv_flow_value_2_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_flow_value_3",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 3 (%)"
                    ),
                ),
                ("uv_flow_value_3_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_flow_value_4",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 4 (%)"
                    ),
                ),
                ("uv_flow_value_4_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_flow_value_5",
                    models.FloatField(
                        blank=True, null=True, verbose_name="UV Flow Value 5 (%)"
                    ),
                ),
                ("uv_flow_value_5_comment", models.TextField(blank=True, null=True)),
                (
                    "umbrella_valve_assembly_1",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_1_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_2",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_2_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_3",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_3_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_4",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_4_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "umbrella_valve_assembly_5",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "umbrella_valve_assembly_5_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "uv_clip_pressing_1",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_1_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_2",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_2_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_3",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_3_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_4",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_4_comment", models.TextField(blank=True, null=True)),
                (
                    "uv_clip_pressing_5",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("uv_clip_pressing_5_comment", models.TextField(blank=True, null=True)),
                (
                    "workstation_clean",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("workstation_clean_comment", models.TextField(blank=True, null=True)),
                (
                    "bin_contamination_check_1",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_1_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_2",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_2_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_3",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_3_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_4",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_4_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "bin_contamination_check_5",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("NOK", "NOK")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "bin_contamination_check_5_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "checklist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subgroups_new",
                        to="main.checklistbase",
                    ),
                ),
                (
                    "frequency_config",
                    models.ForeignKey(
                        blank=True,
                        help_text="Frequency configuration used for this reading",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.subgroupcategoryfrequencyconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subgroup Entry (New with Category Timing)",
                "verbose_name_plural": "Subgroup Entries (New with Category Timing)",
                "ordering": ["checklist", "timestamp", "subgroup_number"],
            },
        ),
        migrations.CreateModel(
            name="SubgroupVerificationNew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "verifier_type",
                    models.CharField(
                        choices=[
                            ("supervisor", "Shift Supervisor"),
                            ("quality", "Quality Supervisor"),
                        ],
                        max_length=20,
                    ),
                ),
                ("verified_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("verified", "Verified"), ("rejected", "Rejected")],
                        max_length=20,
                    ),
                ),
                ("comments", models.TextField(blank=True)),
                (
                    "subgroup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verifications",
                        to="main.subgroupentrynew",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Subgroup Verification (New)",
                "verbose_name_plural": "Subgroup Verifications (New)",
                "ordering": ["verified_at"],
            },
        ),
        migrations.CreateModel(
            name="SubgroupCategoryTiming",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("uv_vacuum_test", "UV Vacuum Test"),
                            ("uv_flow_value", "UV Flow Value"),
                            ("umbrella_valve_assembly", "Umbrella Valve Assembly"),
                            ("uv_clip_pressing", "UV Clip Pressing"),
                            ("workstation_cleanliness", "Workstation Cleanliness"),
                            ("bin_contamination_check", "Bin Contamination Check"),
                        ],
                        max_length=30,
                    ),
                ),
                ("last_reading_time", models.DateTimeField()),
                ("next_reading_due", models.DateTimeField()),
                ("readings_count", models.PositiveIntegerField(default=0)),
                ("is_overdue", models.BooleanField(default=False)),
                (
                    "checklist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_timings",
                        to="main.checklistbase",
                    ),
                ),
                (
                    "frequency_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.subgroupcategoryfrequencyconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subgroup Category Timing",
                "verbose_name_plural": "Subgroup Category Timings",
                "ordering": ["next_reading_due"],
                "unique_together": {("checklist", "category")},
            },
        ),
    ]
